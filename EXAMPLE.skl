pkg inventory

doc
    \ Inventory is a collection of items that can be part of the stock and recipe
    \ Inventory items can be added or disabled. Disabled items can not be added to a new recipe or provisioned in stock

file inventory_test.go

# comments are allowed, too

fsm
    \ inventory
states
    \ enabled
    \ disabled

fun
    \ create inventory item
pre
    \ name empty
    \ name non unique       \ fail to check for uniqueness  # precondition comment
pos
    \ item is saved         \ fail to save the item         # fsm{inventory->enabled}

fun
    \ disable item                                          # fsm{inventory=enabled}
pos
    \ item is disabled      \ fail to disable item          # fsm{inventory->disabled}

fun
    \ enable item                                           # fsm{inventory=disabled}
pos
    \ item is enabled       \ fail to enable item           # fsm{inventory->enabled}

fun
    \ validate item
pre
    \ item does not exist   \ fail to check for presence
    \ item disabled                                         # fsm{inventory=enabled}
pos
    \ item valid

pkg order

doc
    \ Package order allows placing of a new order. The order will be placed only if the associated recipe is valid and the stock has enough quantity

file order_test.go

fun
    \ create order
pre
    \ quantity is invalid
    \ recipe is not valid   \ fail to check recipe validity
pos
    \ stock is updated      \ fail to update stock
    \ order created         \ fail to save order

pkg recipe

doc
    \ A recipe has a name and a list of ingredients, where each ingredient is a inventory item associated with a quantity
    \ A recipe can be added given that all its ingredients are valid, meaning that they are enabled and have a positive quantity
    \ Recipes can also be disabled and enabled back. A disabled recipe can not be used in an order

file recipe_test.go

fsm
    \ recipe
states
    \ enabled
    \ disabled

fun
    \ create recipe
pre
    \ empty name
    \ recipe name not unique        \ fail to check for name uniqueness
    \ empty ingredient list
    \ invalid ingredient quantity
    \ duplicate ingredient
    \ ingredient invalid                                                        # fsm{inventory=valid}
pos
    \ recipe created                \ fail to save recipe                       # fsm{recipe->enabled}

fun
    \ disable recipe                                                    # fsm{recipe=enabled}
pos
    \ recipe is disabled      \ fail to disable recipe                  # fsm{recipe->disabled}

fun
    \ enable recipe                                                     # fsm{recipe=disabled}
pos
    \ recipe is enabled       \ fail to enable recipe                   # fsm{recipe->enabled}

fun
    \ validate recipe                                                   # tag{recipe.valid}
pre
    \ recipe not found        \ fail to check for presence
    \ recipe disabled
pos
    \ recipe validated

pkg stock

doc
    \ Stock is a collection of positions. Each position is a inventory item with a associated quantity
    \ A position can be provisioned to increment the quantity or extracted from it.

file stock_test.go

fun
    \ provision                                             # fsm{inventory=enabled}
pre
    \ quantity is negative
pos
    \ position updated          \ fail to update quantity

fun
    \ extract                                               # fsm{recipe=enabled}
pre
    \ quantity is negative
    \ recipe is invalid                                     # ref{recipe.valid}
    \ item not present in stock         \ fail to get stock item
    \ not enough stock for item
pos
    \ position updated                  \ fail to update position quantity
